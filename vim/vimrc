" .vimrc
" Curator: Laurens Duijvesteijn

" General ========================================================== {{{

	" Sets how many lines of history VIM has to remember
	set history=700

	" Enable filetype plugins
	filetype plugin on
	filetype indent on

	" Set to auto read when a file is changed from the outside
	set autoread

	" With a map leader it's possible to do extra key combinations
	" like <leader>w saves the current file
	let mapleader = ","
	let g:mapleader = ","

  let maplocalleader = "\\"

	" Disable vi compatability
	set nocompatible

	" Prevent modelines security exploits
	set modelines=0

	" Save when losing focus
	au FocusLost * :silent! wall

	" UTF-8 encoding
	set encoding=utf-8

	" When scrolling, leave the bottom three lines free
	set scrolloff=6

	" Let vim show the current mode
	set noshowmode

	" Show commands as you type them
	set showcmd

	" Hide buffers instead of closing them
	set hidden

	" Use the wildmenu
	set wildmenu
	set wildmode=list:longest

	" Disable beeping
	set visualbell

	" Highlight the line the cursor is on
	set cursorline

	" Use fast scrolling
	set ttyfast

	" Show the location in the file
	set ruler

	" Make backspace work sanely
	set backspace=indent,eol,start

	" Always show the status line
	set laststatus=2

	" Use relative line numbers by default
	set relativenumber

	" Use a persistent undo file
	set undofile

	" Smarter search settings
	set incsearch
	set ignorecase
	set smartcase
	set hlsearch

	" Invisible character settings
	set list
	set listchars=tab:▸\ ,eol:¬

  " Open help in a vertical split
  cnoremap help vert help

" }}}


" Plugins ========================================================== {{{

	" Pathogen ----------------------------------------------------- {{

		" Load pathogen.vim
		runtime bundle/vim-pathogen/autoload/pathogen.vim

		" Initialize pathogen.vim
		call pathogen#infect()

		" Automatically generate documentation
		call pathogen#helptags()

	" }}

	" NERDTree ----------------------------------------------------- {{

		" Show hidden files and folders
		let NERDTreeShowHidden=1

		" Set file filtering patterns
		let NERDTreeIgnore = ['\.DS_Store$', '\.un\~$', '\.swp$']

		" Map Ctrl + n to bring up NERDTree
		map <C-n> :NERDTreeTabsToggle<CR>

	" }}

	" Gundo -------------------------------------------------------- {{

		nnoremap <F5> :GundoToggle<CR>

	" }}

	" Ack ---------------------------------------------------------- {{

		" Bring up Ack
		nnoremap <leader>a :Ack!<space>

	" }}

	" Sparkup ------------------------------------------------------ {{

		" Set the default keyboard shortcut
		let g:sparkupExecuteMapping='<leader>e'

	" }}

	" vim-powerline ------------------------------------------------ {{

		" Make sure vim uses the powerline symbols
		let g:Powerline_symbols = 'fancy'

    let g:Powerline_theme = 'default'
    let g:Powerline_colorscheme = 'solarized16'

	" }}
	
	" Fugitive ----------------------------------------------------- {{

		" Automatically delete unused Fugitive buffers
		autocmd BufReadPost fugitive://* set bufhidden=delete

	" }}
	
	" CSSLint ------------------------------------------------------ {{

		" Enable CSSLint
		let g:CSSLint_FileTypeList = ['css', 'less', 'sess'] 

	" }}
	
	" EasyMotion --------------------------------------------------- {{

		" Toggle EasyMotion with space
		let g:EasyMotion_leader_key = '<space>'

	" }}
	
	" CtrlP -------------------------------------------------------- {{

		let g:ctrlp_map = '<Leader>t'
		let g:ctrlp_match_window_bottom = 0
		let g:ctrlp_match_window_reversed = 0
		let g:ctrlp_custom_ignore = '\v\~$|\.(o|swp|pyc|wav|mp3|ogg|blend)$|(^|[/\\])\.(hg|git|bzr)($|[/\\])|__init__\.py'
		let g:ctrlp_working_path_mode = 0
		let g:ctrlp_dotfiles = 0
		let g:ctrlp_switch_buffer = 0

	" }}

" }}}

" Text, tabs, wrapping and indentation ========================== {{{

	" Use spaces instead of tabs
	set expandtab

	" Be smart when using tabs ;)
	set smarttab

	" 1 tab == 4 spaces
	set shiftwidth=2
	set tabstop=2
	set softtabstop=2

  " Round indent to multiples of shiftwidth
  set shiftround

	" Linebreak on 500 characters
	set linebreak
	set textwidth=0
	set wrapmargin=0

	" Automatically remove trailing whitespace
	autocmd BufWritePre *.py :%s/\s\+$//e

	" Indentation and wrapping
	set autoindent
	set smartindent

	" Text wrapping ------------------------------------------------ {{

		set textwidth=79
		set colorcolumn=85

    set wrap
    set linebreak
    set nolist
		set formatoptions=qrn1

	" }}

	" Filetype specific settings ----------------------------------- {{

		" HTML & CSS ----------------------------------------------- {

			" Tab settings
			autocmd FileType html setlocal tabstop=2 softtabstop=2 shiftwidth=2 expandtab
			autocmd FileType css setlocal tabstop=2 softtabstop=2 shiftwidth=2 expandtab

		" }

		" LaTeX ---------------------------------------------------- {

			autocmd FileType plaintex setlocal tabstop=2 softtabstop=2 shiftwidth=2 expandtab

		" }

	" }}

" }}}

" Mappings ========================================================= {{{

	" Disable arrow key movement ----------------------------------- {{

		nnoremap <up> <nop>
		nnoremap <down> <nop>
		nnoremap <left> <nop>
		nnoremap <right> <nop>
		inoremap <up> <nop>
		inoremap <down> <nop>
		inoremap <left> <nop>
		inoremap <right> <nop>

    " Sane line switching with j and k
		nnoremap j gj
		nnoremap k gk

	" }}

	" Convenience mappings ----------------------------------------- {{

		" Remap F1 to ESC
		inoremap <F1> <ESC>
		nnoremap <F1> <ESC>
		vnoremap <F1> <ESC>

		:nmap ; :CtrlPBuffer<CR>

		" Easy buffer navigation
		noremap <C-h> <C-w>h
		noremap <C-j> <C-w>j
		noremap <C-k> <C-w>k
		noremap <C-l> <C-w>l

		" Press enter to save file in normal mode
		nnoremap <CR> :write<CR>

    " Moving lines up and down
    nnoremap <leader>- ddp
    nnoremap <leader>_ ddkP

    " Convert CURRENT word to uppercase
    inoremap <c-d> <esc>lviwU<esc>i
    nnoremap <c-d> viwU

    " Open .vimrc
    nnoremap <leader>emv :vsplit ~/.lib/dotfiles/vim/vimrc<cr>
    nnoremap <leader>sv :source ~/.lib/dotfiles/vim/vimrc<cr>
    
    " Make OS level copy/paste work
    noremap <leader>y "*y
    noremap <leader>yy "*Y

    " Preserve indentation while pasting text from the OS X clipboard
    noremap <leader>p :set paste<CR>:put  *<CR>:set nopaste<CR>

		" Create a new vertical split and switch to it
		nnoremap <leader>w <C-w>v<C-w>l

		" Clear search
		noremap <leader>c :let @/=""<CR>

	" }}

" }}}

" VIM Environment (GUI/Console) ==================================== {{{

	" Enable syntax highlighting
	syntax enable

	" Use dark variant of color scheme
	set background=dark

	" Set colorscheme
	let g:solarized_visibility = "low"
	colors solarized

	" Use Unix as the standard file type
	set ffs=unix,dos,mac


	if has('gui_running')
		" GUI Vim

		set guifont=Menlo\ Regular:h13

		" Remove all the UI cruft
		set go-=T
		set go-=l
		set go-=L
		set go-=r
		set go-=R

		highlight SpellBad term=underline gui=undercurl guisp=Orange

		if has("gui_macvim")
			" Full screen means FULL screen
			set fuoptions=maxvert,maxhorz

			" Use the normal HIG movements, except for M-Up/Down
			let macvim_skip_cmd_opt_movement = 1
			no   <D-Left>       <Home>
			no!  <D-Left>       <Home>
			no   <M-Left>       <C-Left>
			no!  <M-Left>       <C-Left>

			no   <D-Right>      <End>
			no!  <D-Right>      <End>
			no   <M-Right>      <C-Right>
			no!  <M-Right>      <C-Right>

			no   <D-Up>         <C-Home>
			ino  <D-Up>         <C-Home>
			imap <M-Up>         <C-o>{

			no   <D-Down>       <C-End>
			ino  <D-Down>       <C-End>
			imap <M-Down>       <C-o>}

			imap <M-BS>         <C-w>
			inoremap <D-BS>     <esc>my0c`y
		else
			" Non-MacVim GUI, like Gvim
		end
	else
		" Console Vim
		" For me, this means iTerm2, possibly through tmux

		" Mouse support
		set mouse=a
		set t_Co=256
	endif

" }}}
